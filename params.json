{
  "name": "Pqplot",
  "tagline": "Publication quality plots in matlab",
  "body": "# PQPLOT\r\n\r\nSome functions for easily generating publication quality plots in Matlab with all of the `set()` and `get()` stuff built in.\r\n\r\n- This is in no way a flexible package ready for general use. I've just been creating functions here and there based on my needs at the time.\r\n- Currently, this uses the viridis colourmap\r\n\r\n## Examples\r\n\r\n### Scatterplot\r\n\r\nScatterplots can be created with the `pqscatter` function. Title can be added with the `pqtitle` function, which takes the pqplot object `s` (in the example below) as the first argument.\r\n\r\n``` matlab\r\n% Creating a PQ ScatterPlot\r\nrng(123);\r\nx = randn(100, 1);\r\ny = 1.5*x + 0.2*randn(100, 1);\r\n\r\nfigure();\r\ns = pqscatter(x, y);\r\npqtitle(s, 'PQ Scatter Plot');\r\nxlabel('X Label');\r\nylabel('Y Label');\r\n\r\n```\r\n<img src=\"http://www.abrahamnunes.com/images/pqplot/pqscatter.svg\" width=\"100%\">\r\n\r\n#### Actual vs. Estimate Scatterplots and Plotting Least Squares Regression Lines\r\n\r\nThis function was originally created to compare accuracy of a model-fitting algorithm's parameter estimates compared to the true ones. As such, there exists an option third argument in `pqscatter` which accepts a cell array containing one or more of `'match'`, which plots a diagonal line from the origin to the top right-hand corner, or `'lm'` which plots an ordinary least-squares regression line to the data series.\r\n\r\n``` matlab\r\n\r\n% Creating an Actual vs. Estimate PQ ScatterPlot\r\n\r\nrng(123);\r\nx = randn(100, 1);\r\ny = 1.5*x + 0.2*randn(100, 1);\r\n\r\nfigure();\r\ns = pqscatter(x, y, {'match'});\r\npqtitle(s, 'PQ Actual vs. Estimate Plot');\r\nxlabel('Actual');\r\nylabel('Estimate');\r\n\r\n```\r\n\r\n<img src=\"http://www.abrahamnunes.com/images/pqplot/pqactualestimate.svg\" width=\"100%\">\r\n\r\n``` matlab\r\n\r\n% Creating an Actual vs. Estimate PQ ScatterPlot with an additional least squares fit line\r\n\r\nrng(123);\r\nx = randn(100, 1);\r\ny = 1.5*x + 0.2*randn(100, 1);\r\n\r\nfigure();\r\ns = pqscatter(x, y, {'match', 'lm'});\r\npqtitle(s, 'PQ Actual vs. Estimate Plot');\r\nxlabel('Actual');\r\nylabel('Estimate');\r\n\r\n```\r\n\r\n<img src=\"http://www.abrahamnunes.com/images/pqplot/pqactualestimatelm.svg\" width=\"100%\">\r\n\r\n#### Plotting multiple series with `pqscatter`\r\n\r\nJust have `y`  be a matrix with each series you wish to plot as an individual column in that matrix.\r\n\r\n``` matlab\r\n\r\n% Plotting multiple series with pqscatter\r\n\r\nrng(123);\r\nx = randn(100, 1);\r\ny = meshgrid(0.5:2.5, 1:100).*repmat(x, 1, 3) + 0.2*randn(100, 3);\r\n\r\nfigure();\r\ns = pqscatter(x, y, {'match', 'lm'});\r\npqtitle(s, 'PQ Actual vs. Estimate Plot');\r\nxlabel('Actual');\r\nylabel('Estimate');\r\n\r\n```\r\n\r\n<img src=\"http://www.abrahamnunes.com/images/pqplot/pqscattermulti.svg\" width=\"100%\">\r\n\r\n### Bar Plots\r\n\r\nBar plots can be created with the `pqbar` function\r\n\r\n``` matlab\r\n\r\n% Bar plot with pqbar()\r\n\r\nrng(123);\r\nlabelsx = {'A', 'B', 'C'};\r\ny = rand(1, 3)*10;\r\n\r\nfigure();\r\ns = pqbar(labelsx, y);\r\npqtitle(s, 'PQ Bar Plot');\r\nylabel('Values');\r\n\r\n```\r\n\r\n<img src=\"http://www.abrahamnunes.com/images/pqplot/pqbar.svg\" width=\"100%\">\r\n\r\nThe `pqbar` function can also plot multiple series per xlabel. Just add each series as a new column in the array `y`:\r\n\r\n``` matlab\r\n\r\n% Bar plot with pqbar()\r\n\r\nrng(123);\r\nlabelsx = {'A', 'B', 'C'};\r\ny = rand(3, 5)*10;\r\n\r\nfigure();\r\ns = pqbar(labelsx, y);\r\npqtitle(s, 'PQ Bar Plot Multi-Series');\r\nylabel('Values');\r\n\r\n```\r\n\r\n<img src=\"http://www.abrahamnunes.com/images/pqplot/pqbarmulti.svg\" width=\"100%\">\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}